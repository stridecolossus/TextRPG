# common responses
ok: ok

# parser errors
action.invalid: Eh? (action.invalid)
parser.empty.command: (empty command) 
parser.unknown.action: Eh? (unknown.action)
parser.unknown.argument: You cannot see that (parser unknown)
action.unknown.argument: You cannot see that (unknown arg)
action.illogical: You can't do that!

# common error responses
action.requires.light: You cannot see in the dark
action.combat.blocked: You're a little busy right now!
action.invalid.sleeping: You're fast asleep!
action.invalid.resting: You are resting
action.invalid.mounted: You cannot do that while riding
action.not.carried: You're not carrying that
action.invalid.interaction: You cannot {arg} that
action.invalid.vehicle: You cannot do that in a {arg}
action.invalid.furniture: You cannot do that from here
action.invalid.remote: You cannot reach that

# look
look.direction.invalid: You see nothing of interest

# move
action.north: 	n | north
action.south: 	s | south
action.east:	e | east
action.west:	w | west
action.up:		u | up
action.down:	d | down
move.invalid.direction: You cannot go that way
move.cannot.traverse: You cannot go that way
move.link.closed: The {arg} is closed
move.insufficient.stamina: You're exhausted!
move.not.swimming: You're not swimming
move.link.constraint: It's too narrow
move.link.object: You need something else to go there
move.invalid.furniture: You must stand up first 

# flee
action.flee: f | flee
flee.response: You flee head over heels
flee.cannot.flee: You cannot flee!

# info
action.info: info
info.stats: Stats: Health: {health}/{max_health} Power: {power}/{max_power} Stamina: {stamina}/{max_stamina}
hungry: You are hungry
thirsty: You are thirsty
action.stats: stat | stats
character.info: You are {name}, the {alignment} {gender} {race}
character.info.attributes: STR:{strength} END:{endurance} AGI:{agility} INT:{intelligence} WIL:{will} SKL:{skill} PER:{perception}
character.info.money: You have {gold} {silver} {copper}
character.info.equipment: You are carrying {weight} pounds of equipment. A tad uncomfortable, but no problem
character.info.armour: Armour: {armour}
money.gold: {gold.amount} gold {gold.count}, 
money.silver: {silver.amount} silver {silver.count} and 
money.copper: {copper.amount} copper {copper.count}
gold.one: coin
gold.many: coins
silver.one: penny
silver.many: pennies
copper.one: copper
copper.many: coppers
character.info.money.none: You have no money
character.info.vehicle: You are in a {name}
character.info.furniture: You are {stance} in a {name}
character.info.xp: You have {xp} experience and {points} skill points
action.inventory: i | inv | inventory
info.inventory: You are carrying:
info.inventory.none: You are carrying nothing
action.equipment: eq | equip | equipment
info.equipment: Equipment:
info.equipment.entry: <worn {place} {slot}> - {name} {wear}
info.equipment.entry.hand: <{slot}> - {name} {wear}
info.equipment.none: Equipment: Nothing
action.skills: skills
info.skills: Skills:
info.skills.entry: {name} - {level}
info.skills.none: Skills: None
action.time: time
info.time.invalid: You cannot tell the time here
info.time: It is roughly {hour} o'clock {period}
time.morning: morning
time.afternoon: afternoon
time.evening: evening
time.night: night

# portal
action.open: o | open
action.close: c | cl | close
action.lock: lock
action.unlock: un | unlock
portal.response: You {op} the {name}
openable.not.lockable: You cannot {arg} that
openable.already: It's already {arg}
openable.invalid.open: It's locked
openable.invalid.close: It's already closed
openable.invalid.lock: You cannot lock it when its open
openable.invalid.unlock: You cannot lock it when its open
openable.fixed: You can't {arg} that
portal.requires.key: You are missing the key
portal.not.openable: You cannot {arg} that
action.call: call
call.response: You call for the {name} to be {state}
call.opened: opened
call.closed: closed
call.invalid.location: There is no gate-keeper here!
call.not.friendly: Nothing happens
portal.auto.close: The {arg} closes quietly
portal.auto.lock: You hear a loud *click*
gate.open: The gate-keeper opens the gate
gate.close: The gate-keeper closes the gate

# light
action.light: light
action.snuff: snuff
action.cover: cover | shroud
action.uncover: un | uncover
light.response: You {op} a {name}
light.light: light
light.snuff: snuff
light.cover: cover
light.uncover: uncover
light.requires.tinderbox: You need a tinderbox
light.already.lit: It's already lit
light.lit.expired: You can no longer light that
light.expired: Your {arg} has gone out
light.warning: Your {arg} is growing dim
light.lamp.post: You probably shouldn't interfere with that
snuff.not.lit: It's not lit
cover.not.lantern: You cannot cover that
cover.already.covered: It's already covered
uncover.not.lantern: You cannot uncover that
uncover.not.covered: It's not covered
action.fill.response: You fill a {name}
fill.not.lantern: You cannot fill that
light.fill.full: It's full
light.fill.oil: You cannot fill from that
light.fill.empty: It's empty
action.requires.oil: You need some oil

# control/interact
action.push: push
action.pull: pull
action.move: move
action.turn: turn
interact.response: You {op} the {name}
interact.nothing: Nothing happens
interact.invalid.action: You cannot do that
interact.already.move: It's already been {op}
interact.insufficient.strength: You are not strong enough to {op} that
interact.insufficient.stamina: You are too tired to {op} that

# group
action.group.group: group
action.group.add: add
action.group.remove: remove
action.group.leave: leavegroup
#### TODO ^^^^^^
action.group.leader: leader
action.group.disband: disband
group.requires.argument: You cannot do that
group.not.grouped: You are not in a group
group.not.leader: You are not the leader
group.members: Your group consists of:
group.added: You are now a member of {name}'s group
group.add: {name} has been added to your group
group.removed: {name} has been removed from your group
group.leave: You leave the group
group.left: {name} has left the group
group.leader.actor: You are now leader of the group
group.leader: {name} is now leader of the group
group.disbanded: Your group has been disbanded

# mount
action.lead: lead
action.mount: mount | ride
action.dismount: dismount
action.abandon: abandon
action.lead.response: The {name} starts following you
action.mount.response: You mount the {name}
action.dismount.response: You stop riding the {name}
action.abandon.response: You abandon the {name}
lead.requires.mount: What do you want to lead?
lead.already.following: It's already following you
dismount.superfluous.argument: Eh?
abandon.not.following: It's not following you
abandon.riding.mount: While you're riding it?
mount.no.mounts: You need to specify which mount
mount.not.mount: You cannot {arg} that

# vehicle
action.enter: enter | board
action.leave: leave | out
enter.response: You get in the {name}
leave.response: You get out of the {name}
leave.invalid.location: Where do you want to go?
vehicle.invalid.route: You cannot go there in the {arg}
enter.already.vehicle: You're already in a {arg}

# shop
action.list: list
action.buy: buy | purchase
action.sell: sell
action.cost: cost | price
action.repair: repair | mend
action.buy.response: You buy a {name}
action.sell.response: You sell the {name}
shop.invalid.syntax: That is not a valid filter for this shop
list.empty.results: The shop doesn't sell any of that
shop.list: Stock:
list.entry: {index}: {name} ({count}) 
buy.unknown.object: The shop doesn't sell that
buy.ambiguous.object: Which one do you want to buy?
buy.invalid.index: The shop doesn't sell that
buy.insufficient.funds: You don't have enough money
sell.invalid.object: You cannot sell that here
repair.invalid.object: The shop cannot repair that
action.cost.response: It will cost {amount}
repair.insufficient.funds: You don't have enough money
action.repair.response: It will take {duration} to repair that
shop.not.found: There is no shop here!

# look
action.look: l | look
action.examine: ex | examine | desc | describe
action.exits: x | exits
exit.entry: {dir} - {dest}
exit.closed: {dir} - {cardinality} closed {name}
exit.object: {dir} - {name} to {dest}
list.exits: Exits:
list.exits.none: Exits: None
list.exits.unknown: ???
list.container.closed: It's closed
list.contents.container: Contents:
list.contents.container.none: Nothing
examine.decoration: You see nothing of interest

# search
action.search: search
search.start: You start searching...
search.finished: You've finished searching
search.nothing: You didn't find anything
action.listen: listen
# TODO

# take/drop/put
action.take: t | take
action.drop: d | drop
action.put: put | place
take.response: You take a {name}
drop.response: You drop a {name}
put.response: You put a {name} {place} the {container}
place.in:		in
place.on:		on
place.under:	under
place.behind:	behind
put.link.response: You put the {name} in the {link}
take.already.carried: You're already carrying it
take.cannot.take: You cannot take that!
take.immovable.object: You cannot take that!
take.too.heavy: It's too heavy
take.container.closed: The {arg} is closed
take.portal: You cannot take that
take.no.results: There is nothing to pick up
container.empty.empty: It's already empty

# rope
action.rope: attach | tie | remove | untie
attach.requires.anchor: You need to say what you want to tie it to
rope.attach.response: You tie the {name} to the {anchor}
rope.remove.response: You untie the {name} from the {anchor}
rope.pull.response: The rope unties itself!
rope.already.attached: It's already tied to something
rope.not.anchor: You cannot tie it to that
rope.attach.broken: Your rope is too damaged
take.rope.attached: It's tied to something
rope.not.attached: You need a rope
rope.invalid.location: You cannot untie that here!

# equipment
action.hold: hold
action.equip: wear | equip | eq | wield
action.remove: remove
equip.response: You {verb} a {name} {place} your {slot}
remove.response: You stop {verb} a {name}
remove.all: You remove all your equipment
hold.response: You hold a {name}
equip.wear: wear
equip.put: put
equip.fasten: fasten
equip.wield: wield
equip.hold: hold
equip.verb.across: across
equip.verb.around: around
equip.verb.about: about
equip.verb.over: over
equip.verb.in: in
equip.verb.on: on
equip.wear.stop: wearing
equip.put.stop: using
equip.fasten.stop: using
equip.wield.stop: wielding
equip.hold.stop: holding
equip.not.carried: You're not carrying that
equip.cannot.equip: You lack the necessary skills to wear that
equipment.cannot.equip: You cannot wear that
equipment.not.equipped: You're not wearing that
equipment.equip.missing: You do not have the appropriate container
equipment.equip.occupied: You're already wearing something there
equipment.two.handed: You're using both hands already
equipment.remove.missing: You're not wearing that
equipment.remove.empty: You're not wearing that
equipment.remove.all: You're not wearing anything
remove.invalid.filter: Eh? (invalid filter)

# receptacle
action.fill: fill
action.fill.response: You fill the {name}
fill.requires.water: There's no water here
fill.invalid.source: You cannot fill it from that
fill.infinite.receptacle: You cannot fill that!
fill.self: That would be interesting!
fill.already.full: It's already full
fill.empty.source: It's empty
action.empty: empty
action.empty.response: You empty the {name}
receptacle.consume.empty: It's empty
receptacle.already.empty: It's already empty
receptacle.empty.infinite: You cannot empty that

# drink
action.drink: drink | quaff
drink.response.liquid: You drink the {name}
drink.response.receptacle: You drink from the {name}
drink.response.water: You drink some water
drink.requires.water: There is no water here
drink.not.drinkable: You cannot drink that!
drink.empty.receptacle: It's empty
drink.not.thirsty: You're not thirsty
drink.empty: The {name} is now empty
receptacle.consume.empty: It's empty

# eat
action.consume: eat
consume.response: You eat the {name}
consume.not.food: You cannot eat that!
consume.not.cooked: It's not been cooked
consume.not.hungry: You're not hungry
consume.full: You are full

# cook
action.cook: cook
cook.start: You start cooking...
cook.response: You cook the {arg}
cook.requires.utensil: You need a cooking pan
cook.requires.fire: There is no cooking fire here
cook.requires.skill: You don't know how to cook

# stance
action.default: st | stand
action.resting: rest | sit
action.sleeping: z | sleep
response.default: You stand up
response.resting: You take a rest
response.sleeping: You go to sleep
stance.already: You're already {arg}
stance.invalid: You cannot do that right now

# furniture
action.furniture.resting: sit
action.furniture.sleeping: lie | sleep
action.furniture.default: stand | st
furniture.resting.response: You sit on the {name}
furniture.sleeping.response: You lie down on the {name} and go to sleep
furniture.default.response: You stand on the {name}
furniture.invalid.stance: You cannot {arg} on that
furniture.invalid: You cannot do that right now 
furniture.already: You're already doing that

# follow route
action.follow.n: follow
action.follow.s: follow
action.follow.e: follow
action.follow.w: follow
action.follow.u: follow
action.follow.d: follow
follow.no.link: You cannot go in that direction
follow.no.route: There is nothing to follow
follow.route.finished: You have finished following

# follow entity
action.followentity: follow
follow.not.following: You're not following anyone
follow.entity.invalid: You cannot follow that!

# follow tracks
action.followtracks: follow
track.requires.skill: You don't know how to track
follow.tracks.finished: You've finished following the tracks

# climb
action.climb: cl | climb
climb.invalid.object: You can't climb that

# read
action.read: read
read.requires.index: You need to say which chapter you want to read
read.invalid.chapter: That's not a correct chapter number
readable:

# talk
action.talk: ask | talk | chat | discuss
talk.list.topics: What do you want to talk about?
talk.list.topics.none: Nothing to talk about
talk.unknown.topic: I don't know about that

# swim
action.swim: swim
swim.requires.skill: You don't know how to swim

# smoke
action.smoke: smoke
smoke.start: You fill your pipe...
smoke.response: You smoke some {weed}, Ah...
smoke.requires.pipe: You need a pipe
smoke.requires.weed: You need some pipe-weed

# fish
action.fish: fish
fish.start: You cast your rod...
fish.requires.skill: You don't know how to fish!
fish.requires.water: You cannot fish here!
fish.requires.rod: You need a fishing rod
fish.catch: You have caught:
fish.catch.none: You have caught nothing

# pick lock
action.pick: pick
pick.start: You start trying to pick the lock...
pick.success: You successfully pick the lock
pick.not.openable: You cannot pick that!
pick.not.lockable: It cannot be picked
pick.not.locked: It's not locked
pick.requires.lockpicks: You need some lockpicks
pick.too.difficult: It's too difficult
pick.broken.lockpicks: Your lockpicks are damaged

# backstab
action.backstab: bs | backstab
backstab.start: You silently approach your victim...
backstab.invalid.target: You cannot back-stab that!
backstab.not.sneaking: You're not sneaking
backstab.no.weapon: You don't have a weapon equipped

# sneak
action.sneak: sneak
sneak.start: You start sneaking
sneak.stop: You stop sneaking
sneak.requires.skill: You're not a sneak!

# bandage
action.bandage: bandage
bandage.start: You start binding the wound...
bandage.success: You bandage the wound
bandage.fail: You fail to bandage the wound
bandage.invalid.target: You cannot bandage that!
bandage.requires.skill: You're not trained as a healer
bandage.requires.bandage: You need some bandages

# gather
action.wood: gather | forage
action.herbs: gather | cull
gather.start: You start gathering...
gather.invalid.location: You cannot do that here!
gather.results.empty: You failed to find anything
gather.results.wood: You have gathered {arg} pieces of wood
gather.results.herbs: You have gathered {arg} herbs

# camp
action.camp: camp
camp.start: You start preparing the camp...
camp.response: You have finished building the camp
camp.invalid.location: You cannot camp here!
camp.requires.wood: You need some fire-wood
camp.requires.tinderbox: You need a tinderbox

# butcher
action.butcher: b | butcher
butcher.start: You start butchering the corpse...
butcher.success: You've finished butchering the corpse
corpse.already.butchered: It's already been butchered
butcher.requires.skill: You are no butcher
butcher.requires.knife: You need a hunting knife
butcher.not.corpse: You cannot butcher that!

# track
action.track: tr | track
track.start: You start searching for tracks here...
track.nothing: You didn't find any tracks
track.finished: You've finished tracking
track.invalid.terrain: You cannot track here!
track.found.tracks: You have found:

# recover
action.recoverarrows: recover | arrows
recover.start: You start looking for arrows...
recover.invalid.terrain: You cannot do that here!
archery.requires.skill: You don't know how to do that
recover.found.none: You haven't found any arrows
recover.found.arrows: You have found {count} arrows
