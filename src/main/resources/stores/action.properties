# errors
object.not.carried: You are not carrying the {name}
action.required.tinderbox: You need a tinderbox
action.invalid.terrain: You cannot do that here!
action.invalid.light: It's too dark!

# time
action.time: time
action.time.default: It is {period} of {weekday} the {day} of {month}, {year} {era}
action.time.special: It is {period} of {month}, {year} {era}

# info
action.info: info | inf
player.info.player:	 		You are {name} the {alignment} {gender} {race}
player.info.attributes:		Attributes: Str:{str} End:{end} Int:{int} Will:{will} Agility:{agility} Per:{per} Skill:{skill} Luck:{luck}
player.info.primary: 		Stats: Health:{hit}/{max.hit} Power:{pow}/{max.pow} Stamina:{sta}/{max.sta}
player.info.defence: 		Defence: Armour:{armour} Block:{block} Parry:{parry} Dodge:{dodge}
player.info.armour.none:	You are not wearing any armour			
player.info.equipment: 		Your equipment weighs {weight} pounds, {encumberance}
player.info.cash: 			You have {money}
player.info.cash.none:		no money!
player.info.xp: 			You have earned {xp} experience and have {points} available skill points
player.info.hunger:			You are hungry
player.info.thirst:			You are thirsty
player.info.panic:			You feel panicked!
player.info.disease:		You do not feel very well
player.info.poison:			You do not feel very well
player.info.wound:			You have a {size} wound
encumberance.none:			easy!
encumberance.low:			a tad uncomfortable but no problem
encumberance.medium:		heavy but we will manage...
encumberance.high:			every step is agony!

# inventory
action.inventory: inventory | inv | i
list.inventory.empty:		You are not carrying anything!
list.inventory.header:		Inventory:
list.inventory.short:		<{verb}>					{name}
list.inventory.equipment:	<{verb} {placement} {slot}>	{name}

# skills
action.skills: skills
list.skills.none: You do not know any skills!
list.skills.header: Skills:

# look
action.look: look | l
look.around: around
look.requires.light: It's too dark!
look.nothing: You see nothing of interest

# examine
action.examine: examine | ex | x | look | desc | describe
examine.decoration: You see nothing of interest

# stop
action.stop: stop

# listen
action.listen: listen
action.listen.start: You start listening...
action.listen.stop: You stop listening

# watch
action.watch: watch | lookout
watch.invalid.location: This is not a suitable vantage point
action.watch.start: You start watching...

# exits
action.exits: exits | ex | x
list.exits.none: You can't see any way out of this location!
list.exits.header: Exits:
location.exit.default:		{dir}	- {dest}
location.exit.closed:		{dir}	- closed {name} to {dest}
location.exit.blocked:		{dir}	- blocked {name} to {dest}
location.exit.broken:		{dir}	- broken {name} to {dest}
location.exit.revealed:		{dir}	- revealed {name} to {dest}

# move
action.north:	north | n
action.south:	south | s
action.east:	east | e
action.west:	west | w
action.up:		up | u
action.down:	down | d
move.invalid.direction:		You cannot go that way!
move.frozen.water:			You carefully cross the frozen water
move.deep.snow:				The snow is very deep here
move.invalid.snow:			The snow is too deep!
move.insufficient.stamina:	You are exhausted!
portal.closed:				The {name} seems to be closed
portal.blocked:				The {name} is blocked

# flee
action.flee: flee | f | run | escape | scarper
flee.cannot.flee: You cannot flee!
action.flee.message: You flee head over heels!

# climb
action.climb: climb | cl
climb.invalid.object:	You cannot climb that!
climb.not.climbing:		You are not climbing
climb.not.safe:			It's not safe to try and climb the {name}
climb.fall.death:		You have fallen to your death!

# preferences
action.pref.list: 				pref | prefs | preferences
action.pref.toggle:				toggle | switch
preference.invalid.toggle:		You cannot toggle that preference
action.pref.set:				set | change
preference.invalid.integer:		You cannot set that preference
preference.swim:				swim | swimming
preference.swim.true:			You will not try to swim
preference.swim.false:			You will try to swim
preference.climb_safe:			climb | climbing | safe
preference.climb_safe.true:		You will only attempt safe climbs
preference.climb_safe.false:	You will attempt all climbs	
preference.brief:				brief | short
preference.brief.true:			Location descriptions: brief
preference.brief.false:			Location descriptions: full
preference.allow_follow:		follow
preference.allow_follow.true:	You are allowing others to follow you
preference.allow_follow.false:	You do not allow others to follow you
preference.auto_flee:			autoflee | auto
preference.integer.auto_flee:	Auto-flee: {value}

# contents
action.contents: list | contents
list.contents.invalid:		You cannot do that!
list.contents.closed:		The {name} is closed
list.contents.empty:		There is nothing in the {name}

# take
action.take: take | t | get | carry
take.invalid.fixture:		You can't carry that!
take.container.invalid:		The {name} is not in the {container}
take.object.container:		You take the {name} and put it in the {arg}
take.object.carried:		You take the {name}
take.object.dropped:		You drop the {name}
take.already.carried:		You're already carrying the {name}

# drop
action.drop: drop
drop.object.equipped: 	You are wearing the {name}!
drop.none.matched: 		Drop what?
drop.object.response: 	You drop the {name}
drop.object.smashed:	You drop the {name} and hear a distant {noise}
drop.object.water:		You drop the {name} with a splash

# interact
action.push:		push
action.pull:		pull
action.move:		move
action.turn:		turn
action.press:		press
control.interaction.none: Nothing happens!
### TODO - consolidate into one template and add new 'enum'
control.already:	The {name} has already been {state}
revealed.object: 	You discover a {name}!
control.press:		pressed
control.push:		pushed
control.pull:		pulled
control.move:		moved
control.turn:		turned

# read
action.read: read
read.readable.response: {text}
action.chapters: list | read | chapters | contents
readable.section: {title} - {text}
read.book.index: {index}	{title}
read.invalid.index: That is not a valid chapter for {name}
read.unknown.language: You do not understand the {name}
read.letter.response: {address} - {text}
letter.not.opened: The letter has not been opened
letter.already.opened: The letter has already been opened

# openable
action.open:	open | o
action.close:	close | cl | c
action.unlock:	unlock | un
action.lock:	lock
openable.requires.key: 		You do not have the required key!
portal.auto.reset: 			The {name} closes quietly
container.auto.reset: 		The {name} closes quietly
openable.already.open: 		The {name} is already open
openable.already.closed: 	The {name} is already closed
openable.already.locked: 	The {name} is already locked
openable.state.open:		The {name} is open
openable.state.closed:		The {name} is closed
openable.state.locked: 		The {name} is locked
openable.fixed.open: 		You cannot open the {name}
openable.fixed.closed: 		You cannot close the {name}
openable.fixed.locked: 		You cannot lock the {name}
openable.not.lockable: 		The {name} does not have a lock
open.already.known: 		The {name} is already open
portal.notification.open:	The {name} is opened from the other side
portal.notification.close:	The {name} is closed from the other side
portal.notification.lock:	You hear a click from the {name}
portal.notification.unlock:	You hear a loud click from the {name}

# reveal
action.reveal: reveal | find | open
reveal.already.known: You have already revealed the {name}

# call
action.call: call
gate.not.present: There is no gate here!
gate.call.invalid: Nothing happens!
call.faction.ignored: Nothing happens!
action.call.open: You call for the gate to be opened
action.call.close: You call for the gate to be closed
gate.call.daytime: The gate is already open
action.bribe: bribe | bung
gate.cannot.bribe: You cannot bribe the {name}
gate.insufficient.bribe: The {name} turns his nose up at your paltry offer
bribe.insufficient.money: You do not have enough money
gate.bribe.success: The keeper quickly pockets your money

# pick
action.pick: pick
action.required.pick: You do not know how to do that
pick.invalid.latch: You cannot pick that
pick.not.locked: The {name} is not locked
pick.already.unlocked: The {name} is not locked
pick.success: You successfully pick the {name}
pick.trap.activated: It's a trap!
pick.failed: You failed to pick the {name}

# detect trap
action.detect: detect
trap.detect.success: You have found a trap!
trap.detect.failed: You didn't find any traps

# disarm trap
action.disarm: disarm
disarm.unknown.trap: Is there a trap here?
disarm.already.disarmed: It's already been disarmed
disarm.not.trapped: It's not trapped
trap.disarm.success: You successfully disarm the trap
trap.disarm.failed: You failed to disarm the trap

# backstab
action.backstab: backstab | stab | bs
backstab.requires.hidden: You are not hidden!
backstab.requires.weapon: You are not wielding a suitable weapon
backstab.failed: Argh! You failed to back-stab {name}

# light
action.light: light 
action.snuff: snuff | sn 
action.cover: cover
action.uncover: uncover | un
action.light.light: You light the {name}
action.light.snuff: You snuff the {name}
action.light.cover: You cover the {name}
action.light.uncover: You uncover the {name}
light.requires.source: You need something to light it with
light.already.active: The {name} is already lit
light.expired: The {name} has expired
light.not.active: The {name} is not lit
light.already.covered: The {name} is already covered
light.cannot.cover: You cannot cover that!
light.not.covered: The {name} is not covered
light.cannot.refuel: You cannot fill that!
light.fill.invalid: The cannot use that to fill the {name}!
light.fill.empty: The {name} is empty
light.already.filled: The {name} is full

# fill
action.fill: fill | pour
fill.requires.oil: You need some oil to fill that
fill.requires.water: You need some water to fill that
receptacle.source.empty: The {name} is empty
receptacle.fill.infinite: You cannot fill that!
receptacle.already.full: The {name} is already full
receptacle.fill.invalid: You cannot fill the {name} from that!
fill.utensil.invalid: You cannot fill that with the {name}
fill.utensil.already: The {name} is already full

# drink
action.drink: drink | quaff
drink.requires.water: You cannot find any water to drink
drink.cannot.drink: You cannot drink that!
drink.empty.receptacle: The {name} is empty
drink.not.thirsty: You are not thirsty
drink.thirst.quenched: You are no longer thirsty
drink.receptacle: You drink from the {name}
drink.receptacle.emptied: The {name} is empty

# eat
action.consume: eat | consume
consume.not.hungry: You are not hungry
action.consume.response: You eat the {name}
consume.hunger.zero: You are no longer hungry

# empty
action.empty: empty
receptacle.already.empty: The {name} is already empty
receptacle.empty.infinite: You cannot empty that!
empty.container.closed: The {name} is closed
empty.container.empty: The {name} is already empty
empty.container.immutable: You cannot empty that!

# camp
action.camp: camp
camp.already.present: Somebody has already camped here
camp.completed: You finish building the camp-fire

# rope
action.attach: attach | tie
action.detach: remove | detach | untie | take | t
rope.pull: pull
rope.already.attached: The {name} is tied to something else
rope.anchor.occupied: A rope is already attached to the {name}
rope.broken: The {name} is broken
rope.not.attached: The {name} is not tied to anything
rope.remove.invalid: You cannot remove the {name} here
rope.pull.invalid: You cannot pull the {name} here
rope.pull.nothing: Nothing happens!

# bandage
action.bandage: bandage | bind
bandage.invalid.target: You cannot bandage {name}
bandage.cannot.bandage: You cannot bandage the wound
bandage.success: You successfully bandage the wound

# butcher
action.butcher: butcher | b
corpse.cannot.butcher: You cannot butcher {name}
corpse.already.butchered: The {name} has already been butchered
action.butcher.result: You butcher the {name}

# whet
action.whet: whet
whet.requires.weapon: You're not wearing any weapon that can be whetted
whet.invalid.weapon: You cannot whet that!
whet.exhausted: You are exhausted!
whet.finished: You have finished whetting the {name}

# stance
action.stand:				stand | st
action.rest:				rest | r
action.sleep:				sleep
action.wake:				wake
stance.already.stand:		You're already standing!
stance.already.rest:		You're already resting!
stance.already.sleep:		You are already sound asleep!
stance.not.asleep:			You're already awake!
action.stance.default:		You stand up
action.stance.resting:		You sit down and rest your tired bones
action.stance.sleeping:		You lie down and go to sleep
action.stance.wake:			You wake up

# sneak
action.sneak: sneak | sn
action.required.sneak: You are not a sneak!
action.sneak.start: You start sneaking
action.sneak.stop: You stop sneaking

# smoke
action.smoke: smoke
action.required.pipe: You need a pipe!
smoke.requires.weed: You don't have any pipe-weed
action.smoke.result: You smoke some {name}

# fish
action.fish: fish
fish.invalid.location: You cannot fish here!
fish.failed: You failed to catch anything
fish.success: You've landed a catch

# dice
action.roll: dice | roll | throw
action.roll.dice: You roll a {side}
action.required.dice: You do not have a dice

# flip coin
action.flip: flip | toss
flip.requires.coin: Alas you do not have any coins
action.flip.coin: You toss the coin - it's {side}!
flip.coin.heads: Heads
flip.coin.tails: Tails

# weather
action.weather: weather
weather.description: weather={weather} snow={snow}
frozen.dry.still: FROZEN-DRY-STILL
### TODO
