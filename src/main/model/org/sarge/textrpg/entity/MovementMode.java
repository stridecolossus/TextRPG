package org.sarge.textrpg.entity;

import java.util.List;

import org.sarge.textrpg.contents.Thing;
import org.sarge.textrpg.util.ActionException;
import org.sarge.textrpg.util.Percentile;
import org.sarge.textrpg.world.Exit;
import org.sarge.textrpg.world.Trail;

/**
 * Descriptor for a mode of movement.
 * @author Sarge
 */
public interface MovementMode {
	/**
	 * Helper - Creates a stamina movement cost transaction.
	 * @param entity		Entity
	 * @param cost			Movement cost
	 * @param message		Insufficient stamina warning message
	 * @return Stamina transaction
	 */
	static Transaction transaction(Entity entity, int cost, String message) {
		return new Transaction(entity.model().values().get(EntityValue.STAMINA.key()), cost, message);
	}

	/**
	 * @return Object or entity that is being moving
	 */
	Thing mover();

	/**
	 * @param cost Movement cost
	 * @return Stamina cost transaction(s) for this mode
	 */
	List<Transaction> transactions(int cost);

	/**
	 * Traverses the given exit.
	 * @param exit Exit descriptor
	 * @throws ActionException if the given exit cannot be traversed by this mode
	 */
	void move(Exit exit) throws ActionException;

	/**
	 * @return Noise emission generated by this mode
	 */
	Percentile noise();

	/**
	 * @return Trail of tracks generated by this mode or <tt>null</tt> if none
	 */
	Trail trail();

	/**
	 * @return Visibility of tracks generated by this mode
	 */
	Percentile tracks();
}
