package org.sarge.textrpg.contents;

import static org.sarge.lib.util.Check.notNull;

import org.sarge.lib.util.AbstractEqualsObject;
import org.sarge.textrpg.util.Description;

/**
 * State-change notification generated by an object and propagated to its parent(s).
 * @author Sarge
 * @see Parent#notify(ContentStateChange)
 */
public final class ContentStateChange extends AbstractEqualsObject {
	/**
	 * Types of content notifications.
	 */
	public enum Type {
		/**
		 * Notifies that a light has been activated.
		 */
		LIGHT,

		/**
		 * Contents have changed, e.g. a decay event.
		 */
		CONTENTS,

		/**
		 * Other notification.
		 */
		OTHER
	}

	/**
	 * Notifies a light-level change.
	 */
	public static final ContentStateChange LIGHT_MODIFIED = new ContentStateChange(Type.LIGHT, null);

	/**
	 * Creates a state-change notification.
	 * @param type				Type
	 * @param description		Description
	 * @return Notification
	 */
	public static ContentStateChange of(Type type, Description description) {
		if(type == Type.LIGHT) throw new IllegalArgumentException("Cannot create a custom light-level notification, use LIGHT_ACTIVATED instead");
		return new ContentStateChange(type, notNull(description));
	}

	private final Type type;
	private final Description description;

	/**
	 * Constructor.
	 * @param type				State-change type
	 * @param description		Description of this state-change
	 */
	private ContentStateChange(Type type, Description description) {
		this.type = notNull(type);
		this.description = description;
	}

	/**
	 * @return State-change type
	 */
	public Type type() {
		return type;
	}

	/**
	 * Describes this notification.
	 * @return Description
	 */
	public Description describe() {
		if(type == Type.LIGHT) throw new UnsupportedOperationException();
		return description;
	}
}
